import datetime
from datetime import datetime

import disnake
from disnake.ext import commands

import discord_reply
from config import settings, main_guild_scr
import bot_logic
import mysqlrequests


intents = disnake.Intents.default()

main_guild_object = None
intents.voice_states = True
intents.message_content = True 

bot = commands.Bot(
    command_prefix=settings['prefix'],
    intents=disnake.Intents.all(),
    activity=disnake.Game('Zicnet'),
    status=disnake.Status.streaming
)


@bot.event
async def on_ready():
    global main_guild_object
    discord_reply.guild_object = bot.get_guild(1112211843914670100)
    main_guild_object = bot.get_guild(1112211843914670100)
    print(f"{datetime.now()} Bot ready")


@bot.event
async def on_message(message):
    msg = message.content.lower()
    try:
        message.guild.id == None 
    except AttributeError:
        if msg == "start":
            guild = bot.get_guild(settings['guild'])
            await bot_logic.register(message,guild)


@bot.slash_command(name='activity', description='Activity')
async def activity(ctx):
    await ctx.response.defer()
    player =  mysqlrequests.User(ctx.author.id)
    player = player.player
    await ctx.send(
        "–ß–µ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è?", 
        components = [
            disnake.ui.Button(label="üõπ | –ì—É–ª—è—Ç—å", style=disnake.ButtonStyle.gray, custom_id="status_walk"),
            disnake.ui.Button(label="üöó | –†–∞–±–æ—Ç–∞—Ç—å", style=disnake.ButtonStyle.gray, custom_id="status_job"),
            disnake.ui.Button(label="ü¶Ω | –£—á–µ–±–∞", style=disnake.ButtonStyle.gray, custom_id="status_study"),
            disnake.ui.Button(label="üåÉ | –ù–æ—á–Ω–æ–π –∫–ª—É–±", style=disnake.ButtonStyle.gray, custom_id="status_nightclub"),
            disnake.ui.Button(label="üö§ | –ü–æ—Å—Ç–æ—è—Ç—å —É —è—Ö—Ç—ã", style=disnake.ButtonStyle.gray, custom_id="status_stand_by_the_boat")
        ]
    )


@bot.slash_command(name='info', description='Registration')
async def info(ctx):
    await bot_logic.info(ctx)


@bot.slash_command(guild_ids=main_guild_scr, name='echo', description='echo')
@commands.has_permissions(administrator=True)
async def echo(ctx, text: str):
    channel = ctx.channel
    print(channel)
    await channel.send(text)
    await ctx.author.send(f'–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {text} | –≤ –∫–∞–Ω–∞–ª {channel}')


@bot.listen("on_button_click")
async def help_listener(inter: disnake.MessageInteraction):
    if inter.component.custom_id not in [
            "status_walk", 
            "status_job",
            "status_study",
            "status_nightclub",
            "status_stand_by_the_boat"
        ]:
        return
    player =  mysqlrequests.User(inter.author.id)
    player = player.player
    if player.status != 'free':
        return
    if inter.component.custom_id == "status_walk":
        await inter.response.send_message("–í—ã —É—à–ª–∏ –≤ –ª–µ—Å, –Ω–∞ –ø—Ä–æ–≥—É–ª–∫—É")
        await bot_logic.joborwalk(player, 'walk')
    elif inter.component.custom_id == "status_job":
        await inter.response.send_message("–í—ã —É—à–ª–∏ –ø–ª–∞–∫–∞—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
        await bot_logic.joborwalk(player, 'job')
    elif inter.component.custom_id == "status_study":
        await inter.response.send_message("–í—ã —É—à–ª–∏ —Ç—Ä–∞—Ç–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å –Ω–∞ —É—á–µ–±—É")
        await bot_logic.joborwalk(player, 'status_study')
    elif inter.component.custom_id == "status_nightclub":
        await inter.response.send_message("–í—ã –≤—Å–µ –∂–µ –æ–¥—É–º–∞–ª–∏—Å—å –∏ –ø–æ—à–ª–∏ –≤ –Ω–æ—á–Ω–æ–π –∫–ª—É–±")
        await bot_logic.joborwalk(player, 'status_nightclub')
    elif inter.component.custom_id == "status_stand_by_the_boat":
        await inter.response.send_message("–ó–∞—á–µ—Ç—å –∏–º–µ–µ—Ç —è—Ö—Ç—É, –µ—Å–ª–∏ –≤–æ–∑–ª–µ –Ω–µ–µ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å—Ç–æ—è—Ç—å?")
        await bot_logic.joborwalk(player, 'status_stand_by_the_boat')
    


@echo.error
async def echo_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.author.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –∫–æ–º–∞–Ω–¥—ã ``/echo``.")


print(f"{datetime.now()} Bot start")
bot.run(settings['token'])